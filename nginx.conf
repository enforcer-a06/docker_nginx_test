user nginx;
worker_processes 2;
# worker_rlimit_nofile 65535


error_log /var/log/nginx/error.log warn;
pid /var/run/nginx.pid;


events {
  worker_connections 1024;
}


http {
  include /etc/nginx/mime.types;
  default_type application/octet-stream;
  client_max_body_size 2048m;

  # log_format  main  '$remote_addr - $remote_user [$time_local] "$request"';
  # 上面是一个自定义access_log格式的例子 用main替换下面的combined
  access_log /var/log/nginx/access.log combined;

  sendfile on;
  # 这个选项主要用于优化网络包的传输，减少了因小数据包频繁发送而产生的网络开销。通常与 sendfile 一起使用，以提高网络传输的效率。
  tcp_nopush on;
  #tcp_nodelay 选项确保数据包（即使是小包）立即发送，而不是等待缓冲区填满。
  #tcp_nodelay     on;

  keepalive_timeout 60;

  # Nginx 与上游服务器建立连接的最大时间。
  proxy_connect_timeout 600s;
  # Nginx 向上游服务器发送请求的超时时间
  proxy_send_timeout 600s;
  # Nginx 等待从上游服务器接收响应的超时时间
  proxy_read_timeout 600s;
  # 关闭响应头中显示Server字段 如版本号
  server_tokens off;

  # websocket配置
  map $http_upgrade $connection_upgrade {
    default keep-alive;
    'websocket' upgrade;
  }

  # 请求行+请求头的标准大小为2k
  client_header_buffer_size 4k;
  # 请求行+请求头的最大大小为8k  上面配置的client_header_buffer_size超出的时候会使用下面的大型缓冲区来存储
  large_client_header_buffers 4 8k;
  # 2048k 表示每次传输的最大数据块为2048KB，设置目的是为了防止大文件传输在占用过多网络资源时对其他操作产生不利影响。
  sendfile_max_chunk 2048k;

  include /etc/nginx/sites-available/*.conf;
}

